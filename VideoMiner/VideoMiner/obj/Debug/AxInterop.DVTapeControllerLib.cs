//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("13/03/2008 11:05:33 AM")]

namespace AxDVTapeControllerLib {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{fb93b630-6335-428b-94c8-f7f9f6991070}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    public class AxDVTapeController : System.Windows.Forms.AxHost {
        
        private DVTapeControllerLib._DDVTapeController ocx;
        
        private AxDVTapeControllerEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxDVTapeController() : 
                base("fb93b630-6335-428b-94c8-f7f9f6991070") {
            this.SetAboutBoxDelegate(new AboutBoxDelegate(AboutBox));
        }
        
        public virtual int AboutBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AboutBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.AboutBox()));
            return returnValue;
        }
        
        public virtual int OpenFile() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OpenFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.OpenFile()));
            return returnValue;
        }
        
        public virtual int Play() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Play", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.Play()));
            return returnValue;
        }
        
        public virtual int Stop() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Stop", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.Stop()));
            return returnValue;
        }
        
        public virtual int Pause() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Pause", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.Pause()));
            return returnValue;
        }
        
        public virtual int ToggleMenu() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ToggleMenu", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.ToggleMenu()));
            return returnValue;
        }
        
        public virtual int OpenSession() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OpenSession", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.OpenSession()));
            return returnValue;
        }
        
        public virtual int SaveSession() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveSession", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.SaveSession()));
            return returnValue;
        }
        
        public virtual int SaveSessionAs() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveSessionAs", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.SaveSessionAs()));
            return returnValue;
        }
        
        public virtual string GetTimeCode() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetTimeCode", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetTimeCode()));
            return returnValue;
        }
        
        public virtual int SetTimeCode(string @__MIDL_0010) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetTimeCode", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.SetTimeCode(@__MIDL_0010)));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxDVTapeControllerEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(DVTapeControllerLib._DDVTapeControllerEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((DVTapeControllerLib._DDVTapeController)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxDVTapeControllerEventMulticaster : DVTapeControllerLib._DDVTapeControllerEvents {
        
        private AxDVTapeController parent;
        
        public AxDVTapeControllerEventMulticaster(AxDVTapeController parent) {
            this.parent = parent;
        }
    }
}
